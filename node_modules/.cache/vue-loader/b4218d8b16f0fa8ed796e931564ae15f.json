{"remainingRequest":"/Users/tongjie/Desktop/VueProject/vuecli4-demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tongjie/Desktop/VueProject/vuecli4-demo/src/components/PlSelect.vue?vue&type=style&index=0&id=6a221648&lang=scss&scoped=true&","dependencies":[{"path":"/Users/tongjie/Desktop/VueProject/vuecli4-demo/src/components/PlSelect.vue","mtime":1591939319761},{"path":"/Users/tongjie/Desktop/VueProject/vuecli4-demo/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tongjie/Desktop/VueProject/vuecli4-demo/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/tongjie/Desktop/VueProject/vuecli4-demo/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/tongjie/Desktop/VueProject/vuecli4-demo/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tongjie/Desktop/VueProject/vuecli4-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tongjie/Desktop/VueProject/vuecli4-demo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5wbC1zZWxlY3QtYWxsIHsKICA6OnYtZGVlcCB7CiAgICAuZWwtc2VsZWN0LWRyb3Bkb3duLmlzLW11bHRpcGxlIC5lbC1zZWxlY3QtZHJvcGRvd25fX2l0ZW0uc2VsZWN0ZWQ6OmFmdGVyIHsKICAgICAgZGlzcGxheTogbm9uZTsKICAgIH0KICB9Cn0K"},{"version":3,"sources":["PlSelect.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4HA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PlSelect.vue","sourceRoot":"src/components","sourcesContent":["<!--\nCreated by zhulixiao on 2020/5/11.\n-->\n<template>\n  <el-select\n    class=\"pl-select\"\n    :class=\"{'pl-select-all': enableSelectAll}\"\n    :popper-append-to-body=\"false\"\n    ref=\"select\"\n    :value=\"value\"\n    :multiple=\"multiple\"\n    v-bind=\"$attrs\"\n    v-on=\"$listeners\"\n  >\n    <li\n      v-if=\"enableSelectAll\"\n      @mouseenter.prevent=\"$refs.select.hoverIndex = Infinity\"\n      @click.prevent=\"clickSelectAll\"\n      class=\"el-select-dropdown__item\"\n    >\n      <el-checkbox\n        :indeterminate=\"!isAllSelected && !isNoneSelected\"\n        :value=\"isAllSelected\"\n      >\n        全选\n      </el-checkbox>\n    </li>\n    <el-option\n      v-for=\"item in options\"\n      :key=\"item[optionProps.value]\"\n      ref=\"option\"\n      :value=\"item[optionProps.value]\"\n      :label=\"item[optionProps.label]\"\n    >\n      <span v-if=\"enableSelectAll\" @click.prevent>\n        <el-checkbox\n          :value=\"value.indexOf(item[optionProps.value]) > -1\"\n          :label=\"item[optionProps.label]\"\n        />\n      </span>\n      <template v-else>{{item[optionProps.label]}}</template>\n    </el-option>\n    <template slot=\"empty\"><slot name=\"empty\"></slot></template>\n    <template slot=\"prefix\"><slot name=\"prefix\"></slot></template>\n  </el-select>\n</template>\n\n<script>\n  export default {\n    name: 'PlSelect',\n    props: {\n      value: {\n        type: [Array, String],\n        default() {\n          return '';\n        },\n      },\n      options: {\n        type: Array,\n        default() {\n          return [];\n        },\n      },\n      optionProps: {\n        type: Object,\n        default() {\n          return { value: 'value', label: 'label' };\n        },\n      },\n      hasSelectAll: Boolean,\n      multiple: Boolean,\n    },\n    computed: {\n      isAllSelected() {\n        return this.value.length === this.optionsLength;\n      },\n      isNoneSelected() {\n        return this.value.length === 0;\n      },\n      optionsLength() {\n        return this.options.length;\n      },\n      enableSelectAll() {\n        return this.multiple && this.hasSelectAll;\n      },\n    },\n    data() {\n      return {\n      };\n    },\n    watch: {\n      value: {\n        async handler(val) {\n          if (!this.enableSelectAll) return;\n          if (val.length === this.optionsLength) {\n            await this.$nextTick();\n            this.getElSelectTagsDom().style.display = 'none';\n            this.getElSelectInputDom().value = '全部';\n          } else {\n            await new Promise(resolve => setTimeout(resolve, 10));\n            this.getElSelectTagsDom().style.display = '';\n            this.getElSelectInputDom().value = '';\n          }\n        },\n        immediate: true,\n      },\n    },\n    methods: {\n      clickSelectAll() {\n        this.$emit('input', this.isAllSelected ? [] : this.options.map(item => item[this.optionProps.value]));\n      },\n      getElSelectTagsDom() {\n        this.elSelectTagsDom = this.elSelectTagsDom || this.$refs.select.$el.querySelector('.el-select__tags');\n        return this.elSelectTagsDom;\n      },\n      getElSelectInputDom() {\n        this.elSelectInputDom = this.elSelectInputDom || this.$refs.select.$el.querySelector('.el-input__inner');\n        return this.elSelectInputDom;\n      },\n    },\n  };\n</script>\n\n<style lang=\"scss\" scoped>\n  .pl-select-all {\n    ::v-deep {\n      .el-select-dropdown.is-multiple .el-select-dropdown__item.selected::after {\n        display: none;\n      }\n    }\n  }\n</style>\n"]}]}