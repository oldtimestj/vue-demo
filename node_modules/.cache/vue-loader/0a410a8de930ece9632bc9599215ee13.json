{"remainingRequest":"/Users/tongjie/Desktop/VueProject/vuecli4-demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tongjie/Desktop/VueProject/vuecli4-demo/src/components/PlMenu/index.vue?vue&type=style&index=0&lang=sass&","dependencies":[{"path":"/Users/tongjie/Desktop/VueProject/vuecli4-demo/src/components/PlMenu/index.vue","mtime":1603074666019},{"path":"/Users/tongjie/Desktop/VueProject/vuecli4-demo/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tongjie/Desktop/VueProject/vuecli4-demo/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/tongjie/Desktop/VueProject/vuecli4-demo/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/tongjie/Desktop/VueProject/vuecli4-demo/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tongjie/Desktop/VueProject/vuecli4-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tongjie/Desktop/VueProject/vuecli4-demo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAaW1wb3J0ICcuL2luZGV4LnNjc3MnCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmIA","file":"index.vue","sourceRoot":"src/components/PlMenu","sourcesContent":["<!--\nCreated by zhulixiao on 2020/4/22.\n-->\n<template>\n  <div class=\"pl-menu\" @mouseleave=\"leaveMenuItem\">\n    <div ref=\"scrollList\" class=\"pl-menu-item__list\">\n      <div\n        v-for=\"(parentItem, parentIndex) in data\"\n        :key=\"parentItem.id\"\n        class=\"pl-submenu-item\"\n        :class=\"{'is-active': activeItem.id === parentItem.id || curMenu.id === parentItem.id}\"\n        @mouseenter=\"enterMenuItem(parentItem, $refs.parentItem[parentIndex])\"\n        ref=\"parentItem\"\n      >\n        <menu-item :menu-item=\"parentItem\"/>\n      </div>\n    </div>\n    <transition v-for=\"parentItem in data\" name=\"fade\" :key=\"parentItem.id\">\n      <div\n        v-if=\"activeItem.id && parentItem.id === activeItem.id && activeItemDom\"\n      >\n        <menu-panel-small\n          v-if=\"activeItem.depth === 1\"\n          :data=\"activeItem\"\n          :parentItem=\"activeItemDom\"\n        />\n        <menu-panel-medium\n          v-else-if=\"activeItem.depth === 2\"\n          :data=\"activeItem\"\n          :parentItem=\"activeItemDom\"\n        />\n        <menu-panel-large\n          v-else-if=\"activeItem.depth === 3\"\n          :data=\"activeItem\"\n          :parentItem=\"activeItemDom\"\n        />\n      </div>\n    </transition>\n  </div>\n</template>\n\n<script>\n  import debounce from 'lodash/debounce';\n  import MenuPanelSmall from '@/components/PlMenu/MenuPanelSmall';\n  import MenuPanelMedium from '@/components/PlMenu/MenuPanelMedium';\n  import MenuPanelLarge from '@/components/PlMenu/MenuPanelLarge';\n  import props from '@/components/PlMenu/props';\n  import MenuItem from '@/components/PlMenu/MenuItem';\n\n  export default {\n    name: 'PlMenu',\n    components: {\n      MenuItem, MenuPanelLarge, MenuPanelMedium, MenuPanelSmall, \n    },\n    data() {\n      return {\n        data: [],\n        activeItem: {},\n        activeItemDom: {},\n      };\n    },\n    props,\n    mounted() {\n      this.init();\n    },\n    beforeDestroy() {\n      window.removeEventListener('resize', this.setDataDebounce);\n      this.$refs.scrollList.removeEventListener('scroll', this.setDataDebounce);\n    },\n    computed: {\n      curMenu() {\n        const curMenu = this.data.find((obj) => {\n          let arr = [obj];\n          while (arr.length) {\n            const activeMenu = arr.find(item => item.router === this.$route.path);\n            if (activeMenu) return true;\n            const temp = arr.map(item => ({ ...item }));\n            arr = temp.filter(item => item.children)\n              .reduce((total, cur) => [...total, ...cur.children], []);\n          }\n          return false;\n        });\n        return curMenu || {};\n      },\n    },\n    watch: {\n      menuTree() {\n        this.init();\n      },\n    },\n    methods: {\n      init() {\n        this.setData(this.menuTree);\n        this.setDataDebounce = debounce(() => this.setData(), 200);\n        window.removeEventListener('resize', this.setDataDebounce);\n        window.addEventListener('resize', this.setDataDebounce);\n        this.$refs.scrollList.removeEventListener('scroll', this.setDataDebounce);\n        this.$refs.scrollList.addEventListener('scroll', this.setDataDebounce);\n      },\n      enterMenuItem(item, dom) {\n        this.activeItem = item;\n        this.activeItemDom = dom;\n      },\n      leaveMenuItem() {\n        // this.activeItem = {};\n      },\n      setCurMenu(item) {\n        this.curMenu = this.curMenu || item;\n      },\n      setData(data = this.menuTree) {\n        this.data = data.map(item => ({\n          ...item,\n          depth: this.getDepth(item),\n        }));\n        this.activeItem = { ...this.activeItem };\n      },\n      getDepth(obj) {\n        let arr = [obj];\n        let depth = 0;\n        while (arr.length) {\n          const temp = arr.map(item => ({ ...item }));\n          arr = temp.filter(item => item.children)\n            .reduce((total, cur) => [...total, ...cur.children], []);\n          if (arr.length) depth += 1;\n        }\n        return depth;\n      },\n    },\n  };\n</script>\n<style lang=\"sass\">\n  @import './index.scss'\n</style>\n"]}]}