{
	"version": 3,
	"sources": [
		"InteractEvent.ts"
	],
	"names": [
		"extend",
		"getOriginXY",
		"hypot",
		"BaseEvent",
		"defaults",
		"InteractEvent",
		"constructor",
		"interaction",
		"event",
		"actionName",
		"phase",
		"element",
		"preEnd",
		"type",
		"target",
		"currentTarget",
		"relatedTarget",
		"screenX",
		"screenY",
		"button",
		"buttons",
		"ctrlKey",
		"shiftKey",
		"altKey",
		"metaKey",
		"page",
		"client",
		"delta",
		"rect",
		"x0",
		"y0",
		"t0",
		"dt",
		"duration",
		"clientX0",
		"clientY0",
		"velocity",
		"speed",
		"swipe",
		"timeStamp",
		"dragEnter",
		"dragLeave",
		"axes",
		"interactable",
		"deltaSource",
		"options",
		"origin",
		"starting",
		"ending",
		"prevEvent",
		"coords",
		"start",
		"cur",
		"x",
		"y",
		"pointers",
		"length",
		"downTime",
		"getSwipe",
		"_interaction",
		"angle",
		"Math",
		"atan2",
		"velocityY",
		"velocityX",
		"PI",
		"overlap",
		"left",
		"up",
		"right",
		"down",
		"preventDefault",
		"stopImmediatePropagation",
		"immediatePropagationStopped",
		"propagationStopped",
		"stopPropagation",
		"Object",
		"defineProperties",
		"prototype",
		"pageX",
		"get",
		"set",
		"value",
		"pageY",
		"clientX",
		"clientY",
		"dx",
		"dy"
	],
	"mappings": "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",
	"sourcesContent": [
		"import * as Interact from '@interactjs/types/index'\nimport extend from '@interactjs/utils/extend'\nimport getOriginXY from '@interactjs/utils/getOriginXY'\nimport hypot from '@interactjs/utils/hypot'\n\nimport { BaseEvent } from './BaseEvent'\nimport { Interaction } from './Interaction'\nimport { defaults } from './defaultOptions'\n\nexport type EventPhase = keyof PhaseMap\n\nexport interface PhaseMap {\n  start: true\n  move: true\n  end: true\n}\n\n// defined outside of class definition to avoid assignment of undefined during\n// construction\nexport interface InteractEvent {\n  pageX: number\n  pageY: number\n\n  clientX: number\n  clientY: number\n\n  dx: number\n  dy: number\n\n  velocityX: number\n  velocityY: number\n}\n\nexport class InteractEvent<\n  T extends Interact.ActionName = never,\n  P extends EventPhase = EventPhase,\n> extends BaseEvent<T> {\n  target: Interact.Element\n  currentTarget: Interact.Element\n  relatedTarget: null = null\n  screenX?: number\n  screenY?: number\n  button: number\n  buttons: number\n  ctrlKey: boolean\n  shiftKey: boolean\n  altKey: boolean\n  metaKey: boolean\n  page: Interact.Point\n  client: Interact.Point\n  delta: Interact.Point\n  rect: Interact.FullRect\n  x0: number\n  y0: number\n  t0: number\n  dt: number\n  duration: number\n  clientX0: number\n  clientY0: number\n  velocity: Interact.Point\n  speed: number\n  swipe: ReturnType<InteractEvent<T>['getSwipe']>\n  timeStamp: any\n  // drag\n  dragEnter?: Interact.Element\n  dragLeave?: Interact.Element\n  // resize\n  axes?: 'x' | 'y' | 'xy'\n  preEnd?: boolean\n\n  /** */\n  constructor (\n    interaction: Interaction,\n    event: Interact.PointerEventType,\n    actionName: T,\n    phase: P,\n    element: Interact.Element,\n    preEnd?: boolean,\n    type?: string,\n  ) {\n    super(interaction)\n\n    element = element || interaction.element\n\n    const target      = interaction.interactable\n    const deltaSource = (((target && target.options) || defaults) as any).deltaSource as 'page' | 'client'\n    const origin      = getOriginXY(target, element, actionName)\n    const starting    = phase === 'start'\n    const ending      = phase === 'end'\n    const prevEvent   = starting ? this : interaction.prevEvent\n    const coords      = starting\n      ? interaction.coords.start\n      : ending\n        ? { page: prevEvent.page, client: prevEvent.client, timeStamp: interaction.coords.cur.timeStamp }\n        : interaction.coords.cur\n\n    this.page      = extend({}, coords.page)\n    this.client    = extend({}, coords.client)\n    this.rect      = extend({}, interaction.rect)\n    this.timeStamp = coords.timeStamp\n\n    if (!ending) {\n      this.page.x -= origin.x\n      this.page.y -= origin.y\n\n      this.client.x -= origin.x\n      this.client.y -= origin.y\n    }\n\n    this.ctrlKey       = event.ctrlKey\n    this.altKey        = event.altKey\n    this.shiftKey      = event.shiftKey\n    this.metaKey       = event.metaKey\n    this.button        = (event as MouseEvent).button\n    this.buttons       = (event as MouseEvent).buttons\n    this.target        = element\n    this.currentTarget = element\n    this.preEnd        = preEnd\n    this.type          = type || (actionName + (phase || ''))\n    this.interactable  = target\n\n    this.t0 = starting\n      ? interaction.pointers[interaction.pointers.length - 1].downTime\n      : prevEvent.t0\n\n    this.x0       = interaction.coords.start.page.x - origin.x\n    this.y0       = interaction.coords.start.page.y - origin.y\n    this.clientX0 = interaction.coords.start.client.x - origin.x\n    this.clientY0 = interaction.coords.start.client.y - origin.y\n\n    if (starting || ending) {\n      this.delta = { x: 0, y: 0 }\n    }\n    else {\n      this.delta = {\n        x: this[deltaSource].x - prevEvent[deltaSource].x,\n        y: this[deltaSource].y - prevEvent[deltaSource].y,\n      }\n    }\n\n    this.dt        = interaction.coords.delta.timeStamp\n    this.duration  = this.timeStamp - this.t0\n\n    // velocity and speed in pixels per second\n    this.velocity = extend({}, interaction.coords.velocity[deltaSource])\n    this.speed = hypot(this.velocity.x, this.velocity.y)\n\n    this.swipe = (ending || phase === 'inertiastart') ? this.getSwipe() : null\n  }\n\n  getSwipe () {\n    const interaction = this._interaction\n\n    if (interaction.prevEvent.speed < 600 ||\n        this.timeStamp - interaction.prevEvent.timeStamp > 150) {\n      return null\n    }\n\n    let angle = 180 * Math.atan2(interaction.prevEvent.velocityY, interaction.prevEvent.velocityX) / Math.PI\n    const overlap = 22.5\n\n    if (angle < 0) {\n      angle += 360\n    }\n\n    const left = 135 - overlap <= angle && angle < 225 + overlap\n    const up   = 225 - overlap <= angle && angle < 315 + overlap\n\n    const right = !left && (315 - overlap <= angle || angle <  45 + overlap)\n    const down  = !up   &&   45 - overlap <= angle && angle < 135 + overlap\n\n    return {\n      up,\n      down,\n      left,\n      right,\n      angle,\n      speed: interaction.prevEvent.speed,\n      velocity: {\n        x: interaction.prevEvent.velocityX,\n        y: interaction.prevEvent.velocityY,\n      },\n    }\n  }\n\n  preventDefault () {}\n\n  /**\n   * Don't call listeners on the remaining targets\n   */\n  stopImmediatePropagation () {\n    this.immediatePropagationStopped = this.propagationStopped = true\n  }\n\n  /**\n   * Don't call any other listeners (even on the current target)\n   */\n  stopPropagation () {\n    this.propagationStopped = true\n  }\n}\n\n// getters and setters defined here to support typescript 3.6 and below which\n// don't support getter and setters in .d.ts files\nObject.defineProperties(InteractEvent.prototype, {\n  pageX: { get () { return this.page.x }, set (value) { this.page.x = value } },\n  pageY: { get () { return this.page.y }, set (value) { this.page.y = value } },\n\n  clientX: { get () { return this.client.x }, set (value) { this.client.x = value } },\n  clientY: { get () { return this.client.y }, set (value) { this.client.y = value } },\n\n  dx: { get () { return this.delta.x }, set (value) { this.delta.x = value } },\n  dy: { get () { return this.delta.y }, set (value) { this.delta.y = value } },\n\n  velocityX: { get () { return this.velocity.x }, set (value) { this.velocity.x = value } },\n  velocityY: { get () { return this.velocity.y }, set (value) { this.velocity.y = value } },\n\n})\n"
	]
}